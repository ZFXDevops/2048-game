pipeline {
    agent any

    environment {
        IMAGE_NAME = 'zavifx/2048-custom-image'
        IMAGE_TAG = 'latest'
        CHECKSUM_FILE = 'image_checksum.txt'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $IMAGE_NAME:$IMAGE_TAG .'
            }
        }

        stage('Generate Checksum') {
            steps {
                sh 'docker save $IMAGE_NAME:$IMAGE_TAG | sha256sum > current_checksum.txt'
            }
        }

        stage('Validate Checksum') {
            steps {
                script {
                    def result = sh(script: "diff current_checksum.txt $CHECKSUM_FILE", returnStatus: true)
                    if (result != 0) {
                        error("‚ùå Checksum mismatch! Deployment halted. Image may have changed.")
                    } else {
                        echo "‚úÖ Checksum matches. Proceeding with deployment..."
                    }
                }
            }
        }

        stage('Deploy Application') {
            when {
                expression {
                    return currentBuild.currentResult == 'SUCCESS'
                }
            }
            steps {
                echo 'üöÄ Deploying Docker image to Kubernetes...'
                sh '''
                    kubectl apply -f k8s/2048-deployment.yaml
                    kubectl apply -f k8s/2048-service.yaml
                '''
            }
        }
    }

    post {
        always {
            echo 'üßπ Cleaning up...'
            sh 'rm -f current_checksum.txt'
        }
        failure {
            echo '‚ùå Build failed due to checksum mismatch or other error.'
        }
        success {
            echo '‚úÖ Build and Kubernetes deployment successful.'
        }
    }
}
